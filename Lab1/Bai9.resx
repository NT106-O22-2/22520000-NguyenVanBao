<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCU
        AAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJ
        EBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQA
        AUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQ
        EJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAAB
        QQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQ
        lAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFB
        CRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQkQEJQAAUEJEBCU
        AAFBCRAQlAABQQkQEJQAAUEJEBCUAAFBCRAQlAABQQmw6v7+P8hJ8eeI51NzAAAAAElFTkSuQmCC
</value>
  </data>
</root>